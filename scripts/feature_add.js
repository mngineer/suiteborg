// Generated by CoffeeScript 2.3.1
// Description:
//   Make hubot feature requests from chat
//
// Dependencies:
//   None
//
// Configuration:
//   GITHUB_TOKEN - github access token
//   GITHUB_ASSIGNEE - github user to assign issue to
//
// Commands:
//   hubot [you should | can you] <feature request> - request a new feature
//
// Author:
//   Ryan

var GH_PWD, GH_URL, GH_USR;

GH_URL = "https://api.github.com/repos/mngineer/suiteborg/issues";

GH_PWD = process.env.GITHUB_TOKEN;

GH_USR = process.env.GITHUB_ASSIGNEE;

module.exports = function(robot) {
  return robot.respond(/(you should| can you) (.*)/i, function(msg) {
    var options, payload, user;
    user = robot.brain.userForId(msg.envelope.user.id);
    payload = {
      "title": `${msg.match[2]}`,
      "body": `${msg.match[2]}; requested by ${user.name} (${user.email_address})`,
      "assignees": [`${GH_USR}`]
    };
    options = {
      auth: GH_USR + ":" + GH_PWD,
      headers: {
        "Content-Type": "application/json"
      }
    };
    return robot.http(GH_URL, options).post(JSON.stringify(payload))(function(err, res, body) {
      let errorObj;
      if (err) {
        throw err;
      }
      if (res.statusCode !== 201) {
        msg.send("WE ARE UNABLE TO ASSIMILATE GITHUB. THIS ERROR HAS BEEN RECORDED.");
        errorObj = {
          script: "feature_add.coffee",
          url: GH_URL,
          response: res.statusCode,
          body: body
        };
        robot.brain.set('borgerror',JSON.stringify(errorObj));
        robot.logger.error(JSON.stringify((errorObj)));
        return;
      }
      let parsed = JSON.parse(body);
      return msg.reply(`WE HAVE INITIALIZED SUITEBORG IMPROVEMENT PROPOSAL ${parsed.number}.`);
    });
  });
};
